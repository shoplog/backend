openapi: 3.0.3
info:
  title: Shoplog Backend API
  description: An API for Shoplog
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
    description: Development
  - url: https://unknown.com/api/v1
    description: Production
tags:
  - name: VPIC
    description: API endpoints for the Vehicle Product Information Catalog
paths:
  /vehicles:
    get:
      summary: Get a list of vehicles
      operationId: getVehicles
      tags: ['Vehicles']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Vehicles found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a new vehicle
      operationId: createVehicle
      tags: ['Vehicles']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleCreateRequestBody'
      responses:
        '200':
          description: Vehicle created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /vpic/vin/{vin}:
    get:
      summary: Search for a vehicle by VIN
      operationId: getVPICVin
      tags: ['VPIC']
      security:
        - bearerAuth: []

      parameters:
        - $ref: '#/components/parameters/vin'
      responses:
        '200':
          description: Vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPICVinResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /vpic/years:
    get:
      summary: Get a list of supported vehicle years
      operationId: getVPICYears
      security:
        - bearerAuth: []
      tags: ['VPIC']
      responses:
        '200':
          description: Vehicle years found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPICYearsResponseBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /vpic/years/{year}/makes:
    get:
      summary: Get a list of supported vehicle makes by year
      operationId: getVPICYearMakes
      tags: ['VPIC']
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/year'
      responses:
        '200':
          description: Vehicle makes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPICMakesResponseBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /vpic/makes/{makeId}/year/{year}/models:
    get:
      summary: Get a list of supported vehicle models by make and year
      operationId: getVPICMYearMakeModels
      tags: ['VPIC']
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/year'
        - $ref: '#/components/parameters/makeId'
      responses:
        '200':
          description: Vehicle models found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPICModelsResponseBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
  /vpic/models/{modelId}/year/{year}/attributes:
    get:
      summary: Get a list of supported vehicle attributes by model ID and year
      operationId: getVPICModelAttributesByModelIdAndYear
      tags: ['VPIC']
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/modelId'
        - $ref: '#/components/parameters/year'
      responses:
        '200':
          description: Vehicle attributes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VPICModelAttributesResponseBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    vin:
      name: vin
      in: path
      description: Vehicle Identification Number
      required: true
      schema:
        type: string
        minLength: 17
        maxLength: 17
      example: 5TEWN72N82Z891171
    makeId:
      name: makeId
      in: path
      description: Vehicle make ID
      required: true
      schema:
        type: integer
        format: int32
      example: 1
    modelId:
      name: modelId
      in: path
      description: Vehicle model ID
      required: true
      schema:
        type: integer
        format: int32
      example: 1
    year:
      name: year
      in: path
      description: Vehicle year
      required: true
      schema:
        type: integer
        format: int32
      example: 2002
  responses:
    '400':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidationProblem'
      description: Request cannot be processed due to malformed request syntax
    '401':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authentication failure
    '403':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authorization failure
    '404':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to resource not found
    '422':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was formed correctly but errors ocurred during processing
    '500':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to an internal server error
  schemas:
    Vehicle:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the vehicle
        userId:
          type: string
          description: The unique identifier for the user who owns this vehicle
        make:
          type: string
          description: The make of the vehicle
        model:
          type: string
          description: The model of the vehicle
        year:
          type: integer
          format: int32
          description: The year of the vehicle
        vin:
          type: string
          description: The Vehicle Identification Number
          nullable: true
        plate:
          type: string
          description: The license plate of the vehicle
          nullable: true
        color:
          type: string
          description: The color of the vehicle
          nullable: true
        mileage:
          type: integer
          format: int32
          description: The mileage of the vehicle
        mileageDistanceUnit:
          type: string
          description: The unit of the mileage
          enum:
            - KM
            - MI
        createdAt:
          type: string
          format: date-time
          description: The date and time the vehicle was created
        updatedAt:
          type: string
          format: date-time
          description: The date and time the vehicle was last updated
        attributes:
          type: array
          description: The attributes of the vehicle
          items:
            $ref: '#/components/schemas/VehicleAttribute'
      required:
        - id
        - userId
        - make
        - model
        - year
        - mileage
        - mileageDistanceUnit
    VehicleCreateRequestBody:
      type: object
      additionalProperties: false
      required:
        - make
        - model
        - year
        - mileage
        - mileageDistanceUnit
      properties:
        make:
          type: string
          description: The make of the vehicle
        model:
          type: string
          description: The model of the vehicle
        year:
          type: integer
          format: int32
          description: The year of the vehicle
        vin:
          type: string
          description: The Vehicle Identification Number
          nullable: true
        plate:
          type: string
          description: The license plate of the vehicle
          nullable: true
        color:
          type: string
          description: The color of the vehicle
          nullable: true
        mileage:
          type: integer
          format: int32
          description: The mileage of the vehicle
        mileageDistanceUnit:
          type: string
          description: The unit of the mileage
          enum:
            - KM
            - MI
        attributes:
          type: array
          description: The attributes of the vehicle
          items:
            $ref: '#/components/schemas/VehicleAttribute'
    VehicleAttribute:
      type: object
      additionalProperties: false
      required:
        - code
        - name
        - value
      properties:
        code:
          type: string
          description: The code of the attribute
        name:
          type: string
          description: The name of the attribute
        value:
          type: string
          description: The value of the attribute
    VPICVinResponseBody:
      description: 'A vehicle search result'
      type: object
      additionalProperties: false
      required:
        - vin
        - makeId
        - make
        - modelId
        - model
        - year
      properties:
        vin:
          type: string
          description: Vehicle Identification Number
          example: 5TEWN72N82Z891171
        suggestedVin:
          type: string
          description: Suggested Vehicle Identification Number
          example: 5TEWN72N82Z891171
        makeId:
          type: integer
          format: int32
          description: Vehicle make ID
          example: 1
        make:
          type: string
          description: Vehicle make
          example: Toyota
        modelId:
          type: integer
          format: int32
          description: Vehicle model ID
          example: 1
        model:
          type: string
          description: Vehicle model
          example: Tacoma
        year:
          type: integer
          format: int32
          description: Vehicle year
          example: 2002
        attributes:
          type: object
          description: Vehicle attributes
          additionalProperties:
            oneOf:
              - type: string
              - type: number
    VPICYearsResponseBody:
      type: array
      description: 'A list of vehicle years'
      additionalProperties: false
      items:
        type: integer
        format: int32
      example: [2000, 2001, 2002]
    VPICMakesResponseBody:
      description: 'A list of vehicle makes'
      type: array
      items:
        $ref: '#/components/schemas/Lookup'
    VPICModelsResponseBody:
      description: 'A list of vehicle models'
      type: array
      items:
        $ref: '#/components/schemas/Lookup'
    VPICModelAttributesResponseBody:
      description: 'A list of vehicle model attributes'
      type: array
      items:
        type: object
        description: Vehicle model attribute
        additionalProperties: false
        required:
          - code
          - name
          - description
          - values
        properties:
          code:
            type: string
            description: The code of the attribute
          name:
            type: string
            description: The name of the attribute
          description:
            type: string
            description: The description of the attribute
          values:
            type: array
            description: The values of the attribute
            items:
              type: object
              description: The value of the attribute
              additionalProperties: false
              required:
                - id
                - value
                - vinSchemaIds
              properties:
                id:
                  type: integer
                  nullable: true
                  format: int32
                  description: The unique identifier for a value
                value:
                  anyOf:
                    - type: string
                    - type: number
                vinSchemaIds:
                  type: array
                  description: The VIN schema identifiers
                  items:
                    type: integer
                    format: int32
    Lookup:
      type: object
      additionalProperties: false
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          description: The unique identifier for a lookup
        name:
          type: string
          description: The name of the lookup
    Problem:
      description: A Problem Details object (RFC 9457)
      type: object
      additionalProperties: true
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          description: URI reference that identifies the problem type
          default: about:blank
        status:
          type: integer
          format: int32
          description: HTTP status code generated by the origin server for this occurrence of the problem
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
        title:
          type: string
          description: A short, human-readable summary of the problem type
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: URI reference that identifies the specific occurrence of the problem
    ValidationProblem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Problem'
      properties:
        errors:
          type: array
          description: A list of validation errors
          items:
            $ref: '#/components/schemas/ValidationError'
      example:
        type: about:blank
        status: 400
        title: One or more validation errors occurred
        errors:
          - name: publicAddress
            reason: Public address is required
          - name: signature
            reason: Signature is required
    ValidationError:
      type: object
      properties:
        name:
          type: string
          description: The name of the field that caused the error
        reason:
          type: string
          description: The reason why the field caused the error
