openapi: 3.0.3
info:
  title: Shoplog Backend API
  description: An API for Shoplog
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
    description: Development
  - url: https://unknown.com/api/v1
    description: Production
paths:
  /:
    get:
      summary: Get API status
      responses:
        '200':
          description: API is up and running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: API status
                    example: up
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '400':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidationProblem'
      description: Request cannot be processed due to malformed request syntax
    '401':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authentication failure
    '403':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to authorization failure
    '404':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to resource not found
    '422':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was formed correctly but errors ocurred during processing
    '500':
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Request was not processed due to an internal server error
  schemas:
    Problem:
      description: A Problem Details object (RFC 9457)
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          description: URI reference that identifies the problem type
          default: about:blank
        status:
          type: integer
          format: int32
          description: HTTP status code generated by the origin server for this occurrence of the problem
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
        title:
          type: string
          description: A short, human-readable summary of the problem type
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: URI reference that identifies the specific occurrence of the problem
    ValidationProblem:
      type: object
      allOf:
        - $ref: '#/components/schemas/Problem'
      properties:
        errors:
          type: array
          description: A list of validation errors
          items:
            $ref: '#/components/schemas/ValidationError'
      example:
        type: about:blank
        status: 400
        title: One or more validation errors occurred
        errors:
          - name: publicAddress
            reason: Public address is required
          - name: signature
            reason: Signature is required
    ValidationError:
      type: object
      properties:
        name:
          type: string
          description: The name of the field that caused the error
        reason:
          type: string
          description: The reason why the field caused the error
