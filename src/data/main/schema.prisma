// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator kysely {
  provider        = "prisma-kysely"
  previewFeatures = ["prismaSchemaFolder"]
  output          = "./"
  fileName        = "main-db.d.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum DistanceUnit {
  MI
  KM

  @@map("distance_unit")
}

enum TimeUnit {
  DAY
  WEEK
  MONTH
  YEAR

  @@map("time_unit")
}

model Vehicle {
  id     Int    @id @default(autoincrement())
  userId String @map("user_id")

  vehicleAttributes VehicleAttribute[]
  maintenanceLogs   MaintenanceLog[]
  vehicleParts      VehiclePart[]
  vehicleServices   VehicleService[]

  make                String       @map("make")
  model               String       @map("model")
  year                Int          @map("year")
  vin                 String?      @map("vin")
  plate               String?      @map("plate")
  color               String?      @map("color")
  mileage             Int          @map("mileage")
  mileageDistanceUnit DistanceUnit @map("mileage_distance_unit")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@map("vehicles")
}

model VehicleAttribute {
  id Int @id @default(autoincrement())

  vehicleId Int     @map("vehicle_id")
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  code  String @map("code")
  name  String @map("name")
  value String @map("value")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@unique([vehicleId, code])
  @@map("vehicle_attributes")
}

model MaintenanceLog {
  id     Int    @id @default(autoincrement())
  userId String @map("user_id")

  vehicleId              Int                     @map("vehicle_id")
  vehicle                Vehicle                 @relation(fields: [vehicleId], references: [id])
  serviceShopId          Int?                    @map("serviced_by_shop_id")
  serviceShop            ServiceShop?            @relation(fields: [serviceShopId], references: [id])
  maintenanceLogServices MaintenanceLogService[]

  serviceDate DateTime @map("service_date")
  mileage     Int      @map("mileage")
  notes       String?  @map("notes")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId, vehicleId])
  @@map("maintenance_logs")
}

model MaintenanceLogService {
  maintenanceLogId           Int                         @map("maintenance_log_id")
  maintenanceLog             MaintenanceLog              @relation(fields: [maintenanceLogId], references: [id])
  serviceId                  Int                         @map("service_id")
  service                    Service                     @relation(fields: [serviceId], references: [id])
  maintenanceLogServiceParts MaintenanceLogServicePart[]

  @@id([maintenanceLogId, serviceId])
  @@map("maintenance_logs_services")
}

model MaintenanceLogServicePart {
  maintenanceLogId Int @map("maintenance_log_id")
  serviceId        Int @map("service_id")
  partId           Int @map("part_id")

  part                  Part                  @relation(fields: [partId], references: [id])
  maintenanceLogService MaintenanceLogService @relation(fields: [maintenanceLogId, serviceId], references: [maintenanceLogId, serviceId])

  quantity Int @map("quantity")

  @@id([maintenanceLogId, serviceId, partId])
  @@map("maintenance_logs_services_parts")
}

model ServiceShop {
  id Int @id @default(autoincrement())

  maintenanceLogs MaintenanceLog[]

  name        String  @map("name")
  description String? @map("description")
  contactName String? @map("contact_name")
  address     String? @map("address")
  city        String? @map("city")
  state       String? @map("state")
  postalCode  String? @map("postal_code")
  phoneNumber String? @map("phone_number")
  email       String? @map("email")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("service_shops")
}

model Part {
  id Int @id @default(autoincrement())

  vehicleParts               VehiclePart[]
  maintenanceLogServiceParts MaintenanceLogServicePart[]

  name                   String        @map("name")
  description            String?       @map("description")
  manufacturerPartNumber String?       @map("part_number")
  oemPartNumber          String?       @map("oem_part_number")
  lifespanLowerBound     Int?          @map("lifespan_lower_bound")
  lifespanUpperBound     Int?          @map("lifespan_upper_bound")
  lifespanDistanceUnit   DistanceUnit? @map("lifespan_distance_unit")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("parts")
}

model VehiclePart {
  vehicleId Int     @map("vehicle_id")
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  partId    Int     @map("part_id")
  part      Part    @relation(fields: [partId], references: [id])

  @@id([vehicleId, partId])
  @@map("vehicles_parts")
}

model Service {
  id     Int     @id @default(autoincrement())
  userId String? @map("user_id")

  vehicleServices        VehicleService[]
  maintenanceLogServices MaintenanceLogService[]

  name        String  @map("name")
  description String? @map("description")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([userId])
  @@map("services")
}

enum VehicleServiceRepeatType {
  MILEAGE
  TIME

  @@map("vehicle_service_repeat_type")
}

model VehicleService {
  vehicleId Int     @map("vehicle_id")
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  serviceId Int     @map("service_id")
  service   Service @relation(fields: [serviceId], references: [id])

  repeatType                 VehicleServiceRepeatType? @map("repeat_type")
  repeatIntervalLowerBound   Int?                      @map("repeat_interval_lower_bound")
  repeatIntervalUpperBound   Int?                      @map("repeat_interval_upper_bound")
  repeatIntervalDistanceUnit DistanceUnit?             @map("repeat_interval_distance_unit")
  repeatIntervalTimeUnit     TimeUnit?                 @map("repeat_interval_time_unit")

  @@id([vehicleId, serviceId])
  @@map("vehicles_services")
}
